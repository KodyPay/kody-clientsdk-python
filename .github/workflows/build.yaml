name: Build

on:
  repository_dispatch:
    types: [ tag-push ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'source tag'
        required: true
        type: string

jobs:
  tagging:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ env.tag }}
      version: ${{ env.version }}
      prerelease: ${{ env.prerelease }}
    steps:
      - name: Use the tag from the event
        id: tag
        run: |
          TAG="${{ inputs.tag || github.event.client_payload.tag }}"
          VERSION=${TAG#v}
          echo "TAG from event: ${TAG}"
          echo "tag=${TAG}" >> $GITHUB_ENV
          echo "version=${VERSION}">> $GITHUB_ENV
          if [[ "${TAG}" == *-* ]]; then echo "prerelease=true" >> $GITHUB_ENV; else echo "prerelease=false" >> $GITHUB_ENV; fi

  build-python-3_6:
    needs:
      - tagging
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.6.15'
      - name: Upgrade python tools
        run: python -m pip install --upgrade pip build setuptools wheel
      - name: Install Requirements
        run: python -m pip install -r versions/3_6/requirements.txt
      - name: Clone Proto Repo
        run: git clone https://github.com/KodyPay/kp-protocols-clientsdk.git
      - name: Move Proto Folder
        run: |
          cp -R kp-protocols-clientsdk/src/main/proto versions/3_6/proto
          rm -rf kp-protocols-clientsdk
      - name: Generate GRPC Sources
        run: |
          cd versions/3_6
          mkdir generated
          find ./proto -name "*.proto" -print0 | xargs -0 python -m grpc_tools.protoc -I./proto --python_out=./generated --grpc_python_out=./generated
          rm -rf proto
      - name: Add init files
        run: |
          cd versions/3_6
          find "generated/com/kodypay/grpc/" -type d -not -name '__pycache__' -exec touch {}/__init__.py \;
          echo "__version__ = '0.0.1'" > generated/com/kodypay/grpc/__init__.py
      - name: Amend Imports
        run: |
          cd versions/3_6
          mkdir kody_clientsdk_python
          cp -R generated/com/kodypay/grpc/* kody_clientsdk_python
          rm -rf generated
          find ./kody_clientsdk_python -type f -name "*.py" -exec sed -i -e '/^import / s/com\.kodypay\.grpc/kody_clientsdk_python/g' -e '/^from / s/com\.kodypay\.grpc/kody_clientsdk_python/g' {} \;
      - name: Update version
        run: |
          cd versions/3_6
          echo "__version__ = '${{ needs.tagging.outputs.version }}'" > kody_clientsdk_python/__init__.py
      - name: Build
        run: |
          cd versions/3_6
          python ./setup.py sdist
      - name: Upload dist directory as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: versions/3_6/dist/

  build-publish-python-3_12:
    needs:
      - tagging
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
      - name: Upgrade python tools
        run: python -m pip install --upgrade pip build setuptools wheel
      - name: Install twinte for publishing
        run: python -m pip install twine
      - name: Install Requirements
        run: python -m pip install -r versions/3_12/requirements.txt
      - name: Clone Proto Repo
        run: git clone https://github.com/KodyPay/kp-protocols-clientsdk.git
      - name: Move Proto Folder
        run: |
          cp -R kp-protocols-clientsdk/src/main/proto versions/3_12/proto
          rm -rf kp-protocols-clientsdk
      - name: Generate GRPC Sources
        run: |
          cd versions/3_12
          mkdir generated
          find ./proto -name "*.proto" -print0 | xargs -0 python -m grpc_tools.protoc -I./proto --python_out=./generated --grpc_python_out=./generated
          rm -rf proto
      - name: Add init files
        run: |
          cd versions/3_12
          find "generated/com/kodypay/grpc/" -type d -not -name '__pycache__' -exec touch {}/__init__.py \;
          echo "__version__ = '0.0.1'" > generated/com/kodypay/grpc/__init__.py
      - name: Amend Imports
        run: |
          cd versions/3_12
          mkdir kody_clientsdk_python
          cp -R generated/com/kodypay/grpc/* kody_clientsdk_python
          rm -rf generated
          find ./kody_clientsdk_python -type f -name "*.py" -exec sed -i -e '/^import / s/com\.kodypay\.grpc/kody_clientsdk_python/g' -e '/^from / s/com\.kodypay\.grpc/kody_clientsdk_python/g' {} \;
      - name: Update version
        run: |
          cd versions/3_12
          echo "__version__ = '${{ needs.tagging.outputs.version }}'" > kody_clientsdk_python/__init__.py
      - name: Build
        run: |
          cd versions/3_12
          python ./setup.py sdist bdist_wheel
      - name: Upload dist to PYPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          cd versions/3_12
          twine upload dist/*

  release:
    needs:
      - tagging
      - build-python-3_6
      - build-publish-python-3_12
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          name: "${{ needs.tagging.outputs.tag }}"
          tag: "${{ needs.tagging.outputs.tag }}"
          omitBody: true
          draft: false
          artifacts: "*.tar.gz"
          prerelease: ${{ needs.tagging.outputs.prerelease }}
          makeLatest: ${{ !needs.tagging.outputs.prerelease }}